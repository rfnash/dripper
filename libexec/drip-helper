#!/usr/bin/env bash

# Display colorized information output
function cinfo() {
  COLOR='\033[01;33m' # bold yellow
  RESET='\033[00;00m' # normal white
  MESSAGE=${@:-"${RESET}Error: No message passed"}
  echo -e "${COLOR}${MESSAGE}${RESET}"
}

# Display colorized warning output
function cwarn() {
  COLOR='\033[01;31m' # bold red
  RESET='\033[00;00m' # normal white
  MESSAGE=${@:-"${RESET}Error: No message passed"}
  echo -e "${COLOR}${MESSAGE}${RESET}"
}

set_variables() {
  STOW=$PACKAGE-$VERSION
  PREFIX=$STOW_PATH/$STOW
}

stow_link() {
  if [ -f $STOW_PATH/.stow_${1} ]; then
    echo "${1} already linked."
  else
    echo "${1} linked."
    stow -d $STOW_PATH $1
    touch $STOW_PATH/.stow_${1}
  fi
}

# TODO: Detect similar formula linked.
stow_link_one() {
  if [ ! -d $STOW_PATH/$STOW ]; then
    echo "Error: $STOW is not installed."
    exit 1
  fi

  stow_link $STOW
}

# TODO: Move this to `drip-helper` so we can share the code with the
#       default link.
stow_link_all() {
  for item in $STOW_PATH/*; do
    stow_link ${item##*/}
  done
}

stow_unlink() {
  if [ ! -f $STOW_PATH/.stow_${STOW} ]; then
    echo "$STOW not linked."
    exit 1
  fi

  if [ -d $STOW_PATH/$STOW ]; then
    echo "Unlinked ${STOW}."
    stow -D -d $STOW_PATH $STOW
    rm $STOW_PATH/.stow_${STOW}
  else
    echo "Error: $STOW is not installed."
    exit 1
  fi
}

_install() {
  [ ! -z $_INSTALL ]
}

_uninstall() {
  [ ! -z $_UNINSTALL ]
}

_info() {
  [ ! -z $_INFO ]
}

_link() {
  [ ! -z $_LINK ]
}

resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

set_options() {
  all=""
  if [ "$1" = "--all" ]; then
    all=1
  fi
}
